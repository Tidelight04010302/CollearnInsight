name: Build Windows App and Upload Build Artifacts

on:
  push:
    branches:
      - 'main'  # 当 main 分支有推送时触发

jobs:
  build-windows:
    runs-on: windows-latest
    permissions:
      contents: write  # 允许上传构建结果（Artifacts）

    steps:
      # 1. 检出代码
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. 设置 Python 环境
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # 3. 安装系统依赖（Windows）
      - name: Install system dependencies
        run: |
          # 安装 Visual C++ Redistributable（PyInstaller 依赖）
          choco install -y vcredist
          # 安装其他依赖（根据项目需求添加）
          # 示例：安装 .NET 运行库
          # choco install -y dotnet-runtime

      # 4. 安装 Python 依赖
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      # 5. 打包 Python 应用（使用 PyInstaller）
      - name: Build with PyInstaller
        run: |
          pyinstaller --F --w --i logo1.ico main.py

      # 6. 上传构建结果（Artifacts）
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: my-windows-app  # 构建结果名称
          path: dist\main.exe   # PyInstaller 生成的 Windows 可执行文件路径
          retention-days: 7     # 构建结果保留天数
